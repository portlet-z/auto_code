package ${packageName}.modules.${moduleName}.web;

import cn.people.one.core.base.page.Pagination;
import cn.people.one.modules.${moduleName}.model.${ClassName};
import cn.people.one.modules.${moduleName}.service.impl.${ClassName}Service;
import lombok.extern.slf4j.Slf4j;
import org.nutz.dao.Cnd;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

/**
* ${functionName}Controller
* @author ${author}
*/
@RestController
@RequestMapping("/${adminPath}/${moduleName}/${controllerPath}/")
@Slf4j
public class ${ClassName}Controller {

    @Autowired
    private ${ClassName}Service ${className}Service;

    @RequestMapping(value = {"list", ""}, method = RequestMethod.GET)
    public Pagination list(String title,
                                @RequestParam(defaultValue = "1") int pageNo,
                                @RequestParam(defaultValue = DEF_PAGE_SIZE) int pageSize) {
        return ${className}Service.listPage(pageNo, pageSize, Cnd.where("title", "=", title));
    }

    @RequestMapping(value = "", method = RequestMethod.POST)
    public int save(@RequestBody ${ClassName} ${className}){
        if(${className}.getId() == null){
            ${className}Service.insert(${className});
            return 1;
        }
        return ${className}Service.update(${className});
    }

    @RequestMapping(value = "/{id}", method = RequestMethod.DELETE)
    public int delete(@PathVariable Integer id){
        return ${className}Service.delete(id);
    }

    @RequestMapping(value = "/{id}", method = RequestMethod.GET)
    public ${ClassName} getDetailById(@PathVariable Integer id){
        return ${className}Service.fetch(id);
    }

}